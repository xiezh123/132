#!/bin/bash

clean_commands="apt-get clean
journalctl --vacuum-size=5M
echo > /var/log/syslog
echo > /var/log/syslog.1
echo > /var/log/mail.log.1
echo > /var/log/mail.info.1
echo > /var/log/mail.warn.1
echo > /var/log/mail.err.1
echo > /var/log/mail.log
echo > /var/log/mail.info
echo > /var/log/mail.warn
echo > /var/log/mail.err
echo "清理垃圾完成""

sudo mkdir /etc/docker

if [ -f /etc/docker/daemon.json ]; then
  echo "文件 /etc/docker/daemon.json 已经存在，备份为 /etc/docker/daemon.json.bak"
  sudo mv /etc/docker/daemon.json /etc/docker/daemon.json.bak
fi

sudo tee /etc/docker/daemon.json > /dev/null <<EOF
{
	"registry-mirrors": [
		"https://registry.hub.docker.com",
		"http://hub-mirror.c.163.com",
		"https://docker.mirrors.ustc.edu.cn",
		"https://registry.docker-cn.com"
	]
}
EOF

echo none > /sys/class/leds/green:internet/trigger && sleep 1
echo 255 > /sys/class/leds/green:internet/brightness && sleep 1

apt upgrade -y && sleep 2
# 安装推荐软件包
echo "安装推荐软件包"
apt-get install zip byobu cron btrfs-progs rsync preload pv -y && sleep 3

# 确保docker目录存在
mkdir -p /etc/docker

# Create daemon.json file
cat <<EOT > /etc/docker/daemon.json
{
	"registry-mirrors": [
		"https://registry.hub.docker.com",
		"http://hub-mirror.c.163.com",
		"https://docker.mirrors.ustc.edu.cn",
		"https://registry.docker-cn.com"
	]
}
EOT

# 执行 Docker 安装命令
echo timer > /sys/class/leds/green\:internet/trigger && echo 1000 > /sys/class/leds/green\:internet/delay_on && echo 1000 > /sys/class/leds/green\:internet/delay_off && sleep 1
echo "安装Docker." && sleep 1
#wget -qO- https://get.docker.com | bash -s docker --mirror Aliyun

attempt=0
while [ $attempt -lt 5 ]; do
    if ! command -v docker &> /dev/null; then
        echo "正在安装 Docker..."
        wget -qO- https://get.docker.com | bash -s docker --mirror Aliyun
    fi

    # 检查 Docker 是否成功安装
    if command -v docker &> /dev/null; then
        echo "Docker 已成功安装。"
        break
    else
        echo "Docker 安装失败，正在尝试重新安装..."
        attempt=$((attempt+1))
    fi
done

if [ $attempt -eq 5 ]; then
    echo "Docker 安装失败。请检查您的网络连接并重试。"
fi

# 清理垃圾并压缩系统
echo none > /sys/class/leds/green:internet/trigger && sleep 1
sudo sh -c "echo timer > /sys/class/leds/blue\:wifi/trigger && echo 500 > /sys/class/leds/blue\:wifi/delay_on && echo 500 > /sys/class/leds/blue\:wifi/delay_off" && sleep 1
echo "正在清理垃圾..."
eval "$clean_commands" && sleep 2
if [[ $(grep -c btrfs /proc/mounts) -gt 0 ]]; then
  echo "正在压缩系统..."
  (crontab -l ; echo "30 1 * * 2,4,6 btrfs filesystem defragment -r -v -czstd /") | crontab - && sleep 6
  btrfs filesystem defragment -r -v -czstd / && sleep 6
else
  echo "系统文件不是btrfs，取消执行压缩系统命令"
fi

# 重启系统
echo "重启以确保稳定性..."
eval "$clean_commands" && sleep 1
echo -e "\033[33;32m如需执行脚本，可以在终端输入：z\033[0m"
echo none > /sys/class/leds/green:internet/trigger && sleep 1
sed -i 's/^byobu-status-exec "top"/#byobu-status-exec "top"/' ~/.byobu/status && sleep 2
byobu-enable && sleep 1
sudo rm /usr/local/bin/x
sudo rm /root/0
sudo rm -rf /root/132
sudo rm -rf /etc/docker
#rm -rf /root/*
sleep 1
#创建docker数据映射目录
ln -s /srv /root/容器映射目录
# Reboot the system
/sbin/reboot
