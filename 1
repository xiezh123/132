#!/bin/bash

echo "请选择要执行的操作："
echo "1. 安装工具"
echo "2. 其他命令"
echo "3. 快捷命令"
echo "   a. 关闭LED"
echo "   b. 清理垃圾&压缩系统"
echo "   c. 查看网络信息"
echo "   d. 查看系统状态"

clean_commands="apt-get clean
journalctl --vacuum-size=5M
echo > /var/log/syslog
echo > /var/log/syslog.1
echo > /var/log/mail.log.1
echo > /var/log/mail.info.1
echo > /var/log/mail.warn.1
echo > /var/log/mail.err.1
echo > /var/log/mail.log
echo > /var/log/mail.info
echo > /var/log/mail.warn
echo > /var/log/mail.err
echo "清理垃圾完成""

read -p "请输入选项（1、2、3、3a、3b、3c、3d）：" option

if [ "$option" == "1" ]; then
  echo "请选择要执行的操作："
  echo "a. 安装Docker"
  echo "b. 安装青龙面板"
  echo "c. 安装1Panel面板"
  echo "d. 安装宝塔开心版"
  echo "e. 安装Aria2"
  echo "f. 安装Alist网盘"
  echo "g. 安装CasaOS个人云"
  echo "h. 安装qiandao"
  echo "i. 安装网易云音乐解灰代理服务"
  read -p "请输入字母选项：" install_option

  if [ "$install_option" == "a" ]; then
    echo "请选择使用的镜像源（需要稳定的网络环境）："
    echo "1. 使用Docker官方源"
    echo "2. 使用阿里云镜像源"
    echo "3. 使用DaoCloud镜像源"
    echo "4. 移动docker目录"
    echo "5. 删除Docker及其相关文件和设置"
    read -p "请输入选项（1、2、3、4）：" option
    if [ "$option" == "1" ]; then
    echo "从Docker官方安装Docker"
    curl -fsSL https://get.docker.com -o get-docker.sh
    sudo sh get-docker.sh
    elif [ "$option" == "2" ]; then
      echo "从阿里云安装Docker"
      curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun
    elif [ "$option" == "3" ]; then
      echo "从DaoCloud安装Docker"
      curl -sSL https://get.daocloud.io/docker | sh
    elif [ "$option" == "4" ]; then
      echo "拉取脚本..."
      sudo curl -sSL https://raw.githubusercontent.com/xiezh123/132/main/3 -o /root/3 && sudo bash /root/3
    elif [ "$option" == "5" ]; then
      echo "确认删除 Docker 及其相关文件和设置（如需恢复请更新软件包，如安装docker—ce）"
      sudo systemctl stop docker && sudo apt-get purge docker-ce docker-ce-cli containerd.io && sudo rm -rf /var/lib/docker /etc/docker && sudo groupdel docker && sudo userdel -r docker && sudo rm -rf /etc/systemd/system/docker.service.d /etc/systemd/system/containerd.service.d /lib/systemd/system/docker.service /lib/systemd/system/containerd.service
    echo "Docker 已被完全删除"
    else
      echo "无效的选项"
      exit 1
    fi

    echo "启用 Docker 服务..."
    sudo systemctl enable docker
    echo "请查看Docker 守护进程的状态信，出现Active: active (running)即可"
    sudo systemctl start docker && sleep 3
    systemctl status docker
  elif [ "$install_option" == "b" ]; then
    echo "请选择您要安装的版本："
    echo "1. 安装 Debian 版本"
    echo "2. 安装正式版"
    echo "3. 安装 2.10.13 稳定版"
    echo "4. 进入容器"
    read panel_option

    if [ "$panel_option" == "1" ]; then
        echo "安装 Debian 版本..."
        ## 执行安装命令
        docker run -dit \
        -v $PWD/ql:/ql/data \
        -p 5700:5700 \
        --name qinglong \
        --hostname qinglong \
        --restart always \
        whyour/qinglong:debian
    elif [ "$panel_option" == "2" ]; then
        echo "安装正式版..."
        ## 执行安装命令
        docker run -dit \
        -v $PWD/ql:/ql/data \
        -p 5700:5700 \
        --name qinglong \
        --hostname qinglong \
        --restart always \
        whyour/qinglong:latest
    elif [ "$panel_option" == "3" ]; then
        echo "安装 2.10.13 稳定版..."
        ## 执行安装命令
        docker run -dit \
        -v /root/ql/config:/ql/config \
        -v /root/ql/log:/ql/log \
        -v /root/ql/db:/ql/db \
        -v /root/ql/scripts:/ql/scripts \
        -v /root/ql/jbot:/ql/jbot \
        -v /root/ql/repo:/ql/repo \
        -v /root/ql/ninja:/ql/ninja \
        -v /root/ql/raw:/ql/raw \
        -p 5960:5700 \
        -p 5701:5701 \
        -e ENABLE_HANGUP=true \
        -e ENABLE_WEB_PANEL=true \
        --name ql \
        --hostname ql \
        --privileged=true \
        --restart always \
        whyour/qinglong:2.10.13
    elif [ "$panel_option" == "4" ]; then
        echo "进入容器，按住 Ctrl 和 PQ 退出容器"
        docker exec -it qinglong /bin/bash
    else
        echo "无效的选项，退出脚本"
    fi
  elif [ "$install_option" == "c" ]; then
    echo "安装1Panel面板"
    curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh && bash quick_start.sh
  elif [ "$install_option" == "d" ]; then
    echo "安装宝塔开心版，安装完成后终端执行<bt>自行更改"
    wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh && sudo bash install.sh
  elif [ "$install_option" == "e" ]; then
    echo "安装Aria2"
    apt-get update
    apt-get install -y aria2
  elif [ "$install_option" == "f" ]; then
    echo "安装Alist网盘,IP:5244,帐密请查看输出内容"
    curl -fsSL "https://alist.nn.ci/v3.sh" | bash -s install
  elif [ "$install_option" == "g" ]; then
    echo "安装CasaOS个人云,IP"
    curl -fsSL https://get.casaos.io | sudo bash
  elif [ "$install_option" == "h" ]; then
    echo "安装qiandao,IP:8923"
    docker run --restart=always -d --name qiandao -p 8923:80 -v $(pwd)/qiandao/config:/usr/src/app/config a76yyyy/qiandao:lite-latest
  elif [ "$install_option" == "i" ]; then
    echo "安装网易云音乐解灰,代理端口6666"
    # athr=nondanee && img=unblockneteasemusic && \
    athr=pan93412 && img=unblock-netease-music-enhanced && \
    docker rm -f $img 2>/dev/null || true && \
    docker rmi -f $athr/$img 2>/dev/null || true && \
    docker run -d \
    --name $img \
    --restart always \
    -p 6666:8080 \
    $athr/$img \
    -p 8080:8081 \
    -s -e https://music.163.com -f 59.111.19.33 \
    -o kuwo qq

  else
    echo "选项不存在"
  fi
elif [ "$option" == "2" ]; then
  echo "请选择要执行的操作："
  echo "a. 检查并修复软件包"
  echo "b. 关机"
  echo "c. 禁用系统日志"
  echo "d. 深度清理文件"
  echo "e. 添加主机模式"
  read -p "请输入选项（a、b、c、d、e）：" check_option

  if [ "$check_option" == "a" ]; then
    echo "正在检查并更新软件包..."
    echo -e '\xE2\xA0\x84\xE2\xA0\x84\xE2\xA3\xBF\xE2\xA3\xBF\xE2\xA3\xBF\xE2\xA3\xBF\xE2\xA0\x98\xE2\xA3\xBF\xE2\xA3\xBF\xE2\xA3\xBF\xE2\xA3\xBF\xE2\xA3\xA7\xE2\xA3\x9B\xE2\xA3\xBF\xE2\xA3\xBF\xE2\xA3\xBF\xE2\xA3\xBF\xE2\xA3\xBF\xE2\xA3\xBF\xE2\xA3\xBF\xE2\xA0\xA4\xE2\xA3\xBF\xE2\xA3\xBF\xE2\xA3\xBF\xE2\xA3\xBF\xE2\xA3\xBF\xE2\xA3\xBF\xE2\xA3\xBF\xE2\xA3\xBD\xE2\xA1\x86\xE2\xA0\x84\xE2\xA0\x84'
    apt-get check && apt-get -f install
  elif [ "$check_option" == "b" ]; then
    echo "正在关机..."
    sudo shutdown -h now
  elif [ "$check_option" == "c" ]; then
    echo "正在清空系统日志..."
    sudo systemctl stop rsyslog && sudo systemctl disable rsyslog && sudo systemctl stop systemd-journald && sudo systemctl disable systemd-journald && sudo cat /dev/null > /var/log/syslog && sudo cat /dev/null > /var/log/messages && sudo cat /dev/null > /var/log/auth.log && sudo cat /dev/null > /var/log/user.log && sudo cat /dev/null > /var/log/kern.log && sudo cat /dev/null > /var/log/mysql/error.log && sudo find /var/log -type f -delete && sudo rm -rf /var/log/* && sudo rm -rf /tmp/* && sudo rm -rf /var/tmp/*
  elif [ "$check_option" == "d" ]; then
    read -p "警告：执行此操作可能会造成系统不稳定甚至崩溃，按回车键确认继续执行，出现英文提示时CTRL&C退出：" confirm
    if [ -z "$confirm" ]; then
      echo "正在深度清理文件..."
        if ! command -v bleachbit &> /dev/null
  then
      echo "Bleachbit not found. Installing..."
      sudo apt-get update && sudo apt-get install -y bleachbit
  fi

  echo "Cleaning system..."
  bleachbit --clean system.*
    else
      echo "已取消执行操作"
    fi
  elif [ "$check_option" == "e" ]; then
    read -p "警告：执行此操作将向 rc.local 文件添加一行命令，可能会影响系统稳定性。按回车键确认继续执行：" confirm
    if [ -z "$confirm" ]; then
      echo "正在添加主机模式..."
      sudo sed -i '/exit 0/i\sleep 45\necho host > /sys/kernel/debug/usb/ci_hdrc.0/role' /etc/rc.local
    else
      echo "已取消执行操作"
    fi
  else
    echo "选项不存在"
  fi
elif [[ "$option" == "3a" ]]; then
  # 显示 LED 控制菜单
  echo "请选择 LED 控制选项："
  echo "1. 关闭 LED"
  echo "2. LED 互换"
  read -r led_option
  
  # 处理 LED 控制选项
  case "$led_option" in
    1)
      # 关闭 LED
      echo 0 > /sys/class/leds/mmc0\:\:/brightness #红灯
      echo none > /sys/class/leds/blue\:wifi/trigger #蓝灯
      echo none > /sys/class/leds/green\:internet/trigger #绿灯
      ;;
    2)
      # LED 互换
      echo timer > /sys/class/leds/blue\:wifi/trigger
      echo phy0tx > /sys/class/leds/green\:internet/trigger
      ;;
    *)
      # 默认情况：关闭 LED
      echo "无效的 LED 控制选项，将关闭 LED"
      echo 0 > /sys/class/leds/mmc0\:\:/brightness #红灯
      echo none > /sys/class/leds/blue\:wifi/trigger #蓝灯
      echo none > /sys/class/leds/green\:internet/trigger #绿灯
      ;;
  esac
elif [[ "$option" == "3b" ]]; then 
  echo "清理垃圾"
  eval "$clean_commands"

  ROOT_PARTITION=$(mount | grep "on / " | cut -d' ' -f1)
  if [ "$(lsblk -o FSTYPE "$ROOT_PARTITION" | tail -n1)" == "btrfs" ]; then 
    echo "根文件系统为 btrfs，执行相关操作"
    btrfs filesystem defragment -r -v -czstd /
  else 
    echo "根文件系统不是 btrfs，跳过相关操作"
  fi 
elif [[ "$option" == "3c" ]]; then 
  echo "查看网络信息"
  ping -c 4 google.com
  ip addr show
elif [[ "$option" == "3d" ]]; then 
  echo "查看系统状态"
  echo "系统详情：$(uname -a)"
  echo "CPU 信息：$(lscpu)"
  echo "内存占用情况：$(free -h)"
  echo "Swap 占用情况：$(swapon -s)"
  echo "磁盘挂载情况：$(lsblk)"
  echo "存储占用情况：$(df -h)"
else
  echo "选项不存在"
fi
