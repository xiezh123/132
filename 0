#!/bin/bash

# 要添加到 hosts 文件中的 IP 地址和域名
ip_list="140.82.114.3 github.com\n185.199.108.153 assets-cdn.github.com\n199.232.69.194 github.global.ssl.fastly.net\n151.101.0.133 raw.githubusercontent.com"

# Add /root to the PATH environment variable
echo 'export PATH="$PATH:/root/Quick"' >> ~/.bashrc

# Reload the updated .bashrc file
source ~/.bashrc

echo '/root has been added to the PATH variable'

# 配置文件路径和标志文件路径
CONFIG_DIR="/root/Quick"
CONFIG_FILE="$CONFIG_DIR/鸡你太美"
HOST_MODE_FLAG="$CONFIG_DIR/host_mode_enabled"

# 确保目录存在
mkdir -p "$CONFIG_DIR"

# 检查鸡你太美文件是否存在
if [ ! -f "$CONFIG_FILE" ]; then
  # 如果鸡你太美文件不存在，则向 hosts 文件添加 IP 地址和域名
  if grep -q "$ip_list" /etc/hosts; then
    echo "hosts 文件中已经包含要添加的 IP 地址和域名。"
  else
    # 将 IP 地址和域名添加到 hosts 文件中
    if sudo sh -c "echo '$ip_list' >> /etc/hosts"; then
      echo "IP 地址和域名...已经成功添加到 hosts 文件中。"
    else
      echo "添加 IP 地址和域名到 hosts 文件失败。"
    fi
  fi

  # 创建鸡你太美文件
  if touch "$CONFIG_FILE"; then
    echo "哥哥成功下蛋"
  else
    echo "哥哥卡jj了"
  fi
else
  echo -e "\033[33m脚本已经执行过了，再次执行可能会出现问题\033[0m"
fi

read -p "回车更新，z拉取脚本(y/z)" choice

if [[ "$choice" == "y" || "$choice" == "" ]]; then
  echo "开始执行脚本..."
  
  # 检查是否可以连接到 GitHub 的服务器
  if ping -c 1 github.com &> /dev/null; then
    
    # 下载并执行 6.sh 脚本文件
    MAX_RETRIES=3
    RETRY_COUNT=0
    while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
      curl -sSL https://raw.githubusercontent.com/xiezh123/132/main/6.sh -o /root/Quick/6.sh && chmod +x /root/Quick/6.sh
      
      # 检查是否成功拉取 6.sh
      if [ -f "/root/Quick/6.sh" ]; then
        echo "6.sh has been downloaded successfully!"
        bash /root/Quick/6.sh
        break
      else
        echo "Failed to download 6.sh, retrying..."
        RETRY_COUNT=$((RETRY_COUNT+1))
        sleep 3
      fi
    done

    # 检查是否成功拉取 6.sh
    if [ ! -f "/root/Quick/6.sh" ]; then
      echo "Failed to download 6.sh after $MAX_RETRIES retries."
    fi

    # 执行 2.sh 脚本文件
    if curl -sSL https://raw.githubusercontent.com/xiezh123/132/main/2 | tee /dev/tty | nohup bash 2>&1 | tee /root/Quick/output.log & then
      wait
      echo "脚本执行完毕。"
    else
      echo "脚本执行失败，请检查网络连接和脚本内容。"
    fi
  else
    echo "无法连接到 GitHub 的服务器，请检查您的网络连接和 DNS 解析设置。"
  fi
elif [[ "$choice" == "z" ]]; then
  echo "确保您的网络连接正常，并且 DNS 解析正确。您可以尝试使用 ping 命令来测试是否可以连接到 GitHub的服务器。"
  if curl -sSL https://github.com/xiezh123/132/raw/main/1 -o /usr/local/bin/z && sudo chmod +x /usr/local/bin/z; then
    sleep 3
    if [[ -f "/usr/local/bin/z" ]]; then
      echo "拉取完成。终端输入z执行脚本"
    else
      echo "命令执行失败，请检查网络连接和命令内容。"
    fi
  else
    echo "命令执行失败，请检查网络连接和命令内容。"
  fi
else
  echo "无效的选项：$choice"
fi
